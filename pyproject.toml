
[build-system]
requires = ["flit_core >=3.2,<4"]
build-backend = "flit_core.buildapi"

[project]
name = "snippets"
description = "A Collection of snippets and code examples"
# readme = "README.rst"
requires-python = ">=3.10"
keywords = ["Python"]
license = { file = "LICENSE" }
authors = [{ name = "Chad Lowe" }, { email = "pfmsoft.dev@gmail.com" }]
version = "0.0.0"
# https://pypi.org/classifiers/
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Intended Audience :: Developers",
    "Natural Language :: English",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
]
dependencies = ["pdfminer.six"]

[project.optional-dependencies]
dev = [
    # Automation
    "nox",
    "pre-commit",

    # Formatting
    "black",
    "isort",

    # Tools
    "scriv",
]
lint = ["pylint", "mypy"]
doc = [
    # Documentation
    "Sphinx",
    "sphinx-autobuild",
    "sphinx-autodoc-typehints",
    "sphinx_rtd_theme",
    "myst-parser",
    "sphinx-click",
]
vscode = ["esbonio", "rst2html", "rstcheck"]
testing = [
    "pytest",
    "coverage[toml]",
    "pygments",
    "pytest-cov",
    "pysnooper",
    "devtools",
]


# [project.scripts]
# my-script = "my_package.module:function"

[tool.isort]
profile = "black"
src_paths = ["src", "tests"]

[tool.black]
line-length = 88
target-version = ['py310']

# https://pylint.pycqa.org/en/latest/user_guide/usage/run.html#command-line-options
# https://pylint.pycqa.org/en/latest/user_guide/configuration/all-options.html#standard-checkers
# pylint --generate-toml-config > ./pylint-toml-example.toml
# [tool.pylint.messages_control]
# disable = [
#     "raw-checker-failed",
#     "bad-inline-option",
#     "locally-disabled",
#     "file-ignored",
#     "suppressed-message",
#     "useless-suppression",
#     "deprecated-pragma",
#     "use-symbolic-message-instead"
# ]

[tool.pylint.format]
# for black compatability
max-line-length = "95"

# https://docs.pytest.org/en/6.2.x/customize.html#pyproject-toml
# [tool.pytest.ini_options]
# minversion = "6.0"
# addopts = "-ra -q"
# testpaths = [
#     "tests",
#     "integration",
# ]

[tool.coverage.paths]
source = ["src", "*/site-packages"]
tests = ["tests", "*/tests"]

[tool.coverage.run]
branch = true

[tool.coverage.report]
show_missing = true
# # fail_under = 100

[tool.coverage.html]
directory = "htmlcov"

[tool.scriv]
version = "literal: pyproject.toml: project.version"
format = "md"
md_header_level = "2"
entry_title_template = "file: changelog.d/templates/entry_title_template.md.j2"
new_fragment_template = "file: changelog.d/templates/new_fragment.${config:format}.j2"
